syntax = "proto3";
package nocloud.api;

option go_package = "github.com/slntopp/nocloud/pkg/api/apipb";

import "pkg/google/api/annotations.proto";

import "pkg/accounting/accountspb/accounts.proto";
service AccountsService {
    rpc Token(nocloud.accounts.TokenRequest) returns (nocloud.accounts.TokenResponse) {
        option (google.api.http) = {
            post: "/token"
            body: "*"
        };
    };
    rpc SetCredentials(nocloud.accounts.SetCredentialsRequest) returns (nocloud.accounts.SetCredentialsResponse) {
        option (google.api.http) = {
            post: "/accounts/{account}/credentials"
            body: "*"
        };
    };
    rpc Create(nocloud.accounts.CreateRequest) returns (nocloud.accounts.CreateResponse) {
        option (google.api.http) = {
            post: "/accounts"
            body: "*"
        };
    };
    rpc Get(nocloud.accounts.GetRequest) returns (nocloud.accounts.Account) {
        option (google.api.http) = {
            get: "/accounts/{id}"
        };
    };
    rpc List(nocloud.accounts.ListRequest) returns (nocloud.accounts.ListResponse) {
        option (google.api.http) = {
            get: "/accounts"
        };
    };
}

import "pkg/accounting/namespacespb/namespaces.proto";
service NamespacesService {
    rpc Create(nocloud.namespaces.CreateRequest) returns (nocloud.namespaces.CreateResponse) {
        option (google.api.http) = {
            post: "/namespaces"
            body: "*"
        };
    };
}

import "pkg/health/healthpb/health.proto";
service HealthService {
    rpc Probe(nocloud.health.ProbeRequest) returns (nocloud.health.ProbeResponse) {
        option (google.api.http) = {
            post: "/health/probe"
            body: "*"
        };
    };
};